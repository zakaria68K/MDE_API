node {

  agent {
    docker { image 'maven:3.8.5-openjdk-17-slim' }
  }

  def dockerImageTag = "${[name/]:${env.BUILD_NUMBER}}"

  try {

    stage('Clone repository') {
      git url:"[stages.cloning.url/]",
          credentialsId: "[stages.cloning.credentialID/]",
          branch:"[stages.cloning.branch/]"
    }

    stage('Run integration & unit tests') {
      withCredentials([
        string(credentialsId: 'test-database-url', variable: 'TEST_DATABASE_URL'),
        string(credentialsId: 'test-database-username', variable: 'TEST_DATABASE_USERNAME'),
        string(credentialsId: 'test-database-password', variable: 'TEST_DATABASE_PASSWORD')
      ]) {
        [stages.tests.classestotest/]        
      }
    }

    stage('Build Docker image') {
      sh "docker build -t ${dockerImageTag} ."
    }

    stage('Deploy Docker image') {
      echo "Docker Image Tag Name: ${dockerImageTag}"
      echo "Logging in to Docker Hub..."
      
      withCredentials([
        usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKERHUB_USERNAME', passwordVariable: 'DOCKERHUB_PASSWORD')
      ]) {        
        sh('docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD')
      }  
      
      echo "Pushing image..."
      sh "docker push ${dockerImageTag}"
    }
  } 
}


